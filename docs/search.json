[
  {
    "objectID": "posts/2.상관계수ex.html",
    "href": "posts/2.상관계수ex.html",
    "title": "2. 상관계수 ex",
    "section": "",
    "text": "- 상관계수\n\nX,Y에 상수를 곱해줘도 그대로, 변하지 않음\n기울기만 변함\n\n\nx = rnorm(100)\ny = rnorm(100) + 2*x\nplot(x,y)\ncor(x,y)\npoints(2*x, 0.25*y, col='red') \ncor(2*x, 0.25*y)\n\n0.881075342687499\n\n\n0.881075342687499\n\n\n\n\n\n\n\n\n\n- 상관계수\n\naX, bY 의 상관계수에서 aXb &lt;0 이면\nCorr(aX,bY) = -Corr(X,Y)\n상관계수 크기는 그대로\n기울기만 변함\n\n\nx = rnorm(100)\ny = rnorm(100) + 2*x\nplot(x,y)\ncor(x,y)\npoints(-2*x, 0.1*y, col='red') \ncor(-2*x, 0.1*y)\n\n0.906127948410664\n\n\n-0.906127948410664\n\n\n\n\n\n\n\n\n\n- 상관계수 : 기울기와 관련 X, 직선에 얼마나 몰려있는가"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DC2025",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nApr 4, 2025\n\n\n2. 상관계수 ex\n\n\n이상민 \n\n\n\n\nMar 25, 2025\n\n\n3. DC HW1\n\n\n이상민 \n\n\n\n\nMar 25, 2025\n\n\n1. R distributions\n\n\n이상민 \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/1.R_distributions.html",
    "href": "posts/1.R_distributions.html",
    "title": "1. R distributions",
    "section": "",
    "text": "1. Normal Distribution(정규분포)\n- (Random Number Generation)\n- rnorm(n, mean, sd) -&gt; 평균 mean, 표준편차 sd 에서 n개 랜덤 추출\n\nnormal_random &lt;- rnorm(n = 10, mean = 0, sd = 1)\nprint(\"Normal Random Numbers:\")\nprint(normal_random)\n\n[1] \"Normal Random Numbers:\"\n [1] -0.72730915 -0.09955575 -2.01791946 -1.17899047  0.08952181  0.84630774\n [7]  0.34269490  0.17711561  1.02601457  0.60893424\n\n\n- (Probability Density Function - PDF)\n\n확률밀도함수\n\n\nnormal_pdf &lt;- dnorm(x = seq(-10,10,by=0.05), mean = 0, sd = 1)\nplot(seq(-10,10,by=0.05),normal_pdf, type='l', main ='Normal PDF')\n\n\n\n\n\n\n\n\n- (Cumulative Distribution Function - CDF)\n\n누적분포함수\n\n\nnormal_cdf &lt;- pnorm(q = seq(-10,10,by=0.05), mean = 0, sd = 1)\nplot(seq(-10,10,by=0.05),normal_cdf, main='Norma CDF', type='l' )\n\n\n\n\n\n\n\n\n- (Quantile Function)\n\n분위함수\n\n\nnormal_quantile &lt;- qnorm(p = 0.95, mean = 0, sd = 1)  # 95% 분위수\nprint(\"Normal Quantile at p=0.95:\")\nprint(normal_quantile)\n\n[1] \"Normal Quantile at p=0.95:\"\n[1] 1.644854\n\n\n\n\n2. Bernoulli Distribution(베르누이 분포)\n- rbinom * p=prob 에서 * size번 베르누이 시행해서 성공한 횟수 * n번 반복해서 return\n\nbernoulli_random &lt;- rbinom(n = 10, size = 1, prob = 0.6)\nprint(\"Bernoulli Random Numbers:\")\nprint(bernoulli_random)\n\n[1] \"Bernoulli Random Numbers:\"\n [1] 1 1 1 0 0 1 1 0 1 1\n\n\n- (Probability Mass Function - PMF)\n\n확률 질량 함수\n\n\nbernoulli_pmf &lt;- dbinom(x = c(0,1), size = 1, prob = 0.6)\nbarplot(bernoulli_pmf, main ='Bernoulli pmf')\n\n\n\n\n\n\n\n\n- pbinom(q, size, prob)\n\n누적 분포 함수\n\n\nbernoulli_cdf &lt;- pbinom(q = c(0,1), size = 1, prob = 0.6)\nplot(bernoulli_cdf~c(0,1), xlim = c(-0.2, 1.2),main ='Bernoulli cdf', type='s')\n\n\n\n\n\n\n\n\n\nbernoulli_cdf &lt;- pbinom(q = c(0,1,2,3), size = 3, prob = 0.6)\nplot(bernoulli_cdf~c(0,1,2,3), xlim = c(-0.2, 3.2),main ='Bernoulli cdf', type='s')\n\n\n\n\n\n\n\n\n- (Quantile Function)\n\n분위함수\n\n\nbernoulli_quantile &lt;- qbinom(p = 0.8, size = 1, prob = 0.6)\nprint(\"Bernoulli Quantile at p=0.8:\")\nprint(bernoulli_quantile)\n\n[1] \"Bernoulli Quantile at p=0.8:\"\n[1] 1\n\n\n\n\n3. Binomial Distribution(이항분포)\n- 베르누이분포와 같은 함수지만 size를 1이 아니라 B(n,p)에서의 n으로 바꿈\n\nbinomial_random &lt;- rbinom(n = 10, size = 5, prob = 0.4)\nprint(\"Binomial Random Numbers:\")\nprint(binomial_random)\n\n[1] \"Binomial Random Numbers:\"\n [1] 2 3 3 2 3 1 1 3 3 1\n\n\n- 확률 질량 함수\n\ndbinom(x, size, prob)\n\n\nbernoulli_pmf &lt;- dbinom(x = c(0:5), size = 5, prob = 0.4)\nbarplot(bernoulli_pmf, main ='Binomial pmf')\n# 0,1,2,3,4,5 가 나올 확률\n\n\n\n\n\n\n\n\n- 이항분포의 특성상 분산이 더 작음\n\nE(X) = np\nVar(X) = npq\nq=1-p 이므로 &lt;=1\n\n\nbinomial_random &lt;- rbinom(n = 100, size = 5, prob = 0.4)\nmean(binomial_random)\nvar(binomial_random)\n\n2.21\n\n\n1.42010101010101\n\n\n- 누적 분포 함수\n\npbinom(q, size, prob)\n\n\nbinomial_cdf &lt;- pbinom(q = c(0:5), size = 5, prob = 0.4)\nplot(binomial_cdf~c(0:5), main ='Binomial cdf', xlim=c(0,5), type='s')\n\n\n\n\n\n\n\n\n- (Quantile Function)\n\n분위함수\nqbinom(p, size, prob)\n\n\nbinomial_quantile &lt;- qbinom(p = 0.7, size = 5, prob = 0.4)\nprint(\"Binomial Quantile at p=0.7:\")\nprint(binomial_quantile)\n\n[1] \"Binomial Quantile at p=0.7:\"\n[1] 3\n\n\n\n\n4. Exponential Distribution(지수분포)\n- rexp(n, rate)\n\nexponential_random &lt;- rexp(n = 10, rate = 2)\nprint(\"Exponential Random Numbers:\")\nprint(exponential_random)\n\n[1] \"Exponential Random Numbers:\"\n [1] 0.1571845 0.1074697 0.5828041 0.3155801 1.0756425 0.2600387 0.1384434\n [8] 1.6451927 0.1802277 0.3058570\n\n\n\nmean(rexp(n = 10, rate = 2))\nmean(rexp(n = 100000, rate = 10))\nmean(rexp(n = 100000, rate = 10))\n#거의 1에 근사하게 나옴\n\n0.82651321556108\n\n\n0.0997617675944707\n\n\n0.100401256810418\n\n\n- 확률 밀도 함수\n\ndexp(x, rate)\n\n\nexponential_pdf &lt;- dexp(x = seq(0, 10, length=1000), \n                        rate = 2)\nplot(exponential_pdf~c(seq(0, 10, length=1000)), \n      main=\"Exponential PDF\", type='l', xlab='x', ylab='value')\n\n\n\n\n\n\n\n\n- 누적 분포 함수\n\npexp(q, rate)\n\n\nexponential_cdf &lt;- pexp(q = seq(0, 10, length=1000), rate = 2)\nplot(exponential_cdf~c(seq(0, 10, length=1000)), \n     main=\"Exponential CDF\", type='s', xlab='x', ylab='value')\n###print(exponential_cdf)\n\n\n\n\n\n\n\n\n- (Quantile Function)\n\n분위함수\nqexp(p, rate)\n\n\nexponential_quantile &lt;- qexp(p = 0.6, rate = 2)\nprint(\"Exponential Quantile at p=0.6:\")\nprint(exponential_quantile)\n\n[1] \"Exponential Quantile at p=0.6:\"\n[1] 0.4581454\n\n\n\n\n5. Poisson Distribution(포아송 분포)\n- rpois\n\nlambda=3의 포아송 \\(\\to\\) 결과\nn=10번 반복\n\n\npoisson_random &lt;- rpois(n = 10, lambda = 3)\nprint(\"Poisson Random Numbers:\")\nprint(poisson_random)\n\n[1] \"Poisson Random Numbers:\"\n [1] 1 4 2 5 4 3 1 4 2 5\n\n\n포아송 분포를 따르는 변수의 평균과 분산이 같음\n\nmean(rpois(n=100000,lambda=3))\nvar(rpois(n=100000,lambda=3))\n\n2.99803\n\n\n2.97500698366984\n\n\n- 확률 질량 함수\n\ndpois(x,lambda)\n\n\npoisson_pmf &lt;- dpois(x = seq(0,12,1), lambda = 3)\nnames(poisson_pmf) = seq(0,12,1)\nbarplot(poisson_pmf, main=\"Poisson PMF\")\n\n\n\n\n\n\n\n\n- 누적 분포 함수\n\nppois(q, lambda)\n\n\npoisson_cdf &lt;- ppois(q = seq(0,12,1), lambda = 3)\nnames(poisson_pmf) = seq(0,12,1)\nplot(poisson_cdf~c(0:12), main=\"Poisson CDF\", xlab='x', \n    ylab='value', type='s')\n\n\n\n\n\n\n\n\n- (Quantile Function)\n\n분위함수\nqpois(p, lambda)\n\n\npoisson_quantile &lt;- qpois(p = 0.9, lambda = 3)\nprint(\"Poisson Quantile at p=0.9:\")\nprint(poisson_quantile)\n\n[1] \"Poisson Quantile at p=0.9:\"\n[1] 5\n\n\n\n- 추가\n- 감마 분포\n\n평균 : \\(\\alpha\\) x \\(\\beta\\)\n분산 : \\(\\alpha\\) x \\(\\beta^2\\)\n\n\nmean(rgamma(100000,1,3))\nvar(rgamma(100000,1,3))\n\n0.333018431858545\n\n\n0.111819570741366\n\n\n\n- ggplot\n\nlibrary(ggplot2)\nlibrary(tidyr) \n\n\nresults &lt;- data.frame(\n  Distribution = character(),\n  Value = numeric(),\n  Type = character(),  # Mean, Median, Variance를 구분하는 열 추가\n  stringsAsFactors = FALSE\n)\n\n\n# 1. Normal Distribution\nnormal_data &lt;- rnorm(n = 1000, mean = 0, sd = 1)\n\n\n# ggplot histogram \nggplot(data.frame(Value = normal_data), aes(x = Value)) +\n  geom_histogram(bins = 30, fill = \"skyblue\", color = \"black\") +  # bins: 막대 개수\n  labs(title = \"Normal Distribution Histogram\", x = \"Value\", y = \"Frequency\") +\n  theme_bw() \n\n\n\n\n\n\n\n\n\n# results \nresults &lt;- rbind(results,\n                 data.frame(Distribution = \"Normal\", Value = mean(normal_data), Type = \"Mean\"),\n                 data.frame(Distribution = \"Normal\", Value = median(normal_data), Type = \"Median\"),\n                 data.frame(Distribution = \"Normal\", Value = var(normal_data), Type = \"Variance\"))\n\n\n# 2. Bernoulli Distribution\nbernoulli_data &lt;- rbinom(n = 1000, size = 1, prob = 0.7)\n\n\n# ggplot bar plot \nggplot(data.frame(Outcome = factor(bernoulli_data)), aes(x = Outcome)) +\n  geom_bar(fill = \"coral\", color = \"black\") +\n  labs(title = \"Bernoulli Distribution Bar Plot\", x = \"Outcome (0: Failure, 1: Success)\", y = \"Frequency\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nresults &lt;- rbind(results,\n                 data.frame(Distribution = \"Bernoulli\", Value = mean(bernoulli_data), Type = \"Mean\"),\n                 data.frame(Distribution = \"Bernoulli\", Value = median(bernoulli_data), Type = \"Median\"),\n                 data.frame(Distribution = \"Bernoulli\", Value = var(bernoulli_data), Type = \"Variance\"))\n\n\n# 3. Binomial Distribution\nbinomial_data &lt;- rbinom(n = 1000, size = 10, prob = 0.3)\n\n\n# ggplot histogram \nggplot(data.frame(Successes = binomial_data), aes(x = Successes)) +\n  geom_histogram(binwidth = 1, fill = \"lightgreen\", color = \"black\") +  # binwidth: 막대 너비\n  labs(title = \"Binomial Distribution Histogram\", x = \"Number of Successes\", y = \"Frequency\") +\n  scale_x_continuous(breaks = seq(0, 10, by = 1)) +  # x축 눈금 설정\n  theme_bw()\n\n\n\n\n\n\n\n\n\nresults &lt;- rbind(results,\n                 data.frame(Distribution = \"Binomial\", Value = mean(binomial_data), Type = \"Mean\"),\n                 data.frame(Distribution = \"Binomial\", Value = median(binomial_data), Type = \"Median\"),\n                 data.frame(Distribution = \"Binomial\", Value = var(binomial_data), Type = \"Variance\"))\n\n\n# 4. Exponential Distribution\nexponential_data &lt;- rexp(n = 1000, rate = 2)\n\n\n# ggplot histogram \nggplot(data.frame(Time = exponential_data), aes(x = Time)) +\n  geom_histogram(bins = 30, fill = \"gold\", color = \"black\") +\n  labs(title = \"Exponential Distribution Histogram\", x = \"Time\", y = \"Frequency\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nresults &lt;- rbind(results,\n                 data.frame(Distribution = \"Exponential\", Value = mean(exponential_data), Type = \"Mean\"),\n                 data.frame(Distribution = \"Exponential\", Value = median(exponential_data), Type = \"Median\"),\n                 data.frame(Distribution = \"Exponential\", Value = var(exponential_data), Type = \"Variance\"))\n\n\n# 5. Poisson Distribution\npoisson_data &lt;- rpois(n = 1000, lambda = 5)\n\n\n# ggplot histogram \nggplot(data.frame(Events = poisson_data), aes(x = Events)) +\n  geom_histogram(binwidth = 1, fill = \"violet\", color = \"black\") +\n  labs(title = \"Poisson Distribution Histogram\", x = \"Number of Events\", y = \"Frequency\") +\n  scale_x_continuous(breaks = seq(0, max(poisson_data), by = 1)) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nresults &lt;- rbind(results,\n                 data.frame(Distribution = \"Poisson\", Value = mean(poisson_data), Type = \"Mean\"),\n                 data.frame(Distribution = \"Poisson\", Value = median(poisson_data), Type = \"Median\"),\n                 data.frame(Distribution = \"Poisson\", Value = var(poisson_data), Type = \"Variance\"))\n\n\nresults\n\n\nA data.frame: 15 × 3\n\n\nDistribution\nValue\nType\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n\n\n\n\nNormal\n0.01671411\nMean\n\n\nNormal\n0.01257944\nMedian\n\n\nNormal\n0.92430136\nVariance\n\n\nBernoulli\n0.70800000\nMean\n\n\nBernoulli\n1.00000000\nMedian\n\n\nBernoulli\n0.20694294\nVariance\n\n\nBinomial\n2.94600000\nMean\n\n\nBinomial\n3.00000000\nMedian\n\n\nBinomial\n2.10919319\nVariance\n\n\nExponential\n0.51712705\nMean\n\n\nExponential\n0.34010939\nMedian\n\n\nExponential\n0.28038007\nVariance\n\n\nPoisson\n4.93600000\nMean\n\n\nPoisson\n5.00000000\nMedian\n\n\nPoisson\n4.74464865\nVariance"
  }
]