[
  {
    "objectID": "posts/2.상관계수ex.html",
    "href": "posts/2.상관계수ex.html",
    "title": "2. 상관계수 ex",
    "section": "",
    "text": "- 상관계수\n\nX,Y에 상수를 곱해줘도 그대로, 변하지 않음\n기울기만 변함\n\n\nx = rnorm(100)\ny = rnorm(100) + 2*x\nplot(x,y)\ncor(x,y)\npoints(2*x, 0.25*y, col='red') \ncor(2*x, 0.25*y)\n\n0.881075342687499\n\n\n0.881075342687499\n\n\n\n\n\n\n\n\n\n- 상관계수\n\naX, bY 의 상관계수에서 aXb &lt;0 이면\nCorr(aX,bY) = -Corr(X,Y)\n상관계수 크기는 그대로\n기울기만 변함\n\n\nx = rnorm(100)\ny = rnorm(100) + 2*x\nplot(x,y)\ncor(x,y)\npoints(-2*x, 0.1*y, col='red') \ncor(-2*x, 0.1*y)\n\n0.906127948410664\n\n\n-0.906127948410664\n\n\n\n\n\n\n\n\n\n- 상관계수 : 기울기와 관련 X, 직선에 얼마나 몰려있는가"
  },
  {
    "objectID": "posts/3.DC_HW1.html",
    "href": "posts/3.DC_HW1.html",
    "title": "3. DC HW1",
    "section": "",
    "text": "- 표본추출, 히스토그램\n\nmean = 3 으로 지정\n\n\nnormal_random &lt;- rnorm(n = 500, mean = 3)\nhist(normal_random)\n\n\n\n\n\n\n\n\n- 표본평균\n\nmean(normal_random)\n\n3.0025640596709\n\n\n\n\n\n- 표본추출, 히스토그램\n\n포아송 분포에서 \\(E(X) = \\lambda\\) 이므로 \\(\\lambda\\) = 3으로 지정\n\n\npoisson_random &lt;- rpois(n = 500, lambda = 3)\nhist(poisson_random)\n\n\n\n\n\n\n\n\n- 표본평균\n\nmean(poisson_random)\n\n2.874\n\n\n\n\n\n- 표본추출, 히스토그램\n\n이항분포에서 \\(E(X) = np =\\) 3이 되어야하고, size : n, prob = p 에 대응되므로 평균을 10 X 0.3 = 3으로 설정\n\n\nbinomial_random &lt;- rbinom(n = 500, size = 10, prob = 0.3)\nhist(binomial_random, breaks = seq(-0.5, 10.5, by = 1))\n\n\n\n\n\n\n\n\n- 표본평균\n\nmean(binomial_random)\n\n3.106\n\n\n\n\n\n- 표본추출, 히스토그램\n\n\\(GAM(\\alpha,\\beta)\\) 에서 shape : \\(\\alpha\\), rate : \\(\\frac{1}{\\beta}\\) 에 대응\n감마분포에서 \\(E(X) =\\) \\(\\alpha\\) X \\(\\beta =\\) 3이 되어야함\n1(shape) X 3(=1/rate) = 3\n\n\ngamma_random = rgamma(n=500,shape=1,rate=1/3)\nhist(gamma_random)\n\n\n\n\n\n\n\n\n- 표본평균\n\nmean(gamma_random)\n\n2.86597826745274\n\n\n\n\n\n- 표본추출, 히스토그램\n\n지수분포에서 \\(E(X)= \\frac{1}{\\lambda}=\\) 3이 되어야함\nrate= \\(\\lambda\\) 이므로 3(=1/rate)=3\n\n\nexponential_random &lt;- rexp(n = 500, rate = 1/3)\nhist(exponential_random)\n\n\n\n\n\n\n\n\n- 표본평균\n\nmean(exponential_random)\n\n3.00293798354794\n\n\n\n\n\n\n\n\n- 표본추출, 히스토그램\n\n이항분포에서 \\(E(X) = np\\) 이고\n이항분포에서 \\(Var(X) = np(1-p)\\) 임\nnp=3이어야하고 np(1-p)=5여야하므로 (1-p)=5/3 \\(\\to\\) 불가능한데? 잠시 pass\nsize : n, prob = p 에 대응되므로 …\n\n\nbinomial_random &lt;- rbinom(n = 500, size = 10, prob = 0.3)\nhist(binomial_random, breaks = seq(-0.5, 10.5, by = 1))\n\n- 표본평균, 표본분산\n\nmean(binomial_random)\n\n\n\n\n- 표본추출, 히스토그램\n\nmean = 3 으로 지정\n\\(Var(X)=5\\) 이여야 하므로 sd=\\(\\sqrt{Var}\\)=\\(\\sqrt5\\) 로 지정\n\n\nnormal_random &lt;- rnorm(n = 500, mean = 3, sd=sqrt(5))\nhist(normal_random)\n\n\n\n\n\n\n\n\n- 표본평균, 표본분산\n\nmean(normal_random)\nvar(normal_random)\n\n2.92370604471217\n\n\n5.19843216215837\n\n\n\n\n\n- 표본추출, 히스토그램\n\n\\(GAM(\\alpha,\\beta)\\) 에서 shape : \\(\\alpha\\), rate : \\(\\frac{1}{\\beta}\\) 에 대응\n감마분포에서 \\(E(X) =\\) \\(\\alpha\\) X \\(\\beta\\) = 3이 되어야함\n\\(Var(X) =\\) \\(\\alpha\\) X \\(\\beta^2\\) = 5가 되어야함\n\\(\\to\\) \\(\\beta\\) = 5/3, \\(\\alpha\\) = 9/5 \\(\\to\\) rate = 3/5\n\n\ngamma_random = rgamma(n=500,shape=9/5,rate=3/5)\nhist(gamma_random)\n\n\n\n\n\n\n\n\n- 표본평균, 표본 분산\n\nmean(gamma_random)\nvar(gamma_random)\n\n3.15297204789198\n\n\n4.84604724922782"
  },
  {
    "objectID": "posts/3.DC_HW1.html#제공된-코드를-이용하여-아래를-시행하시오.",
    "href": "posts/3.DC_HW1.html#제공된-코드를-이용하여-아래를-시행하시오.",
    "title": "3. DC HW1",
    "section": "",
    "text": "- 표본추출, 히스토그램\n\nmean = 3 으로 지정\n\n\nnormal_random &lt;- rnorm(n = 500, mean = 3)\nhist(normal_random)\n\n\n\n\n\n\n\n\n- 표본평균\n\nmean(normal_random)\n\n3.0025640596709\n\n\n\n\n\n- 표본추출, 히스토그램\n\n포아송 분포에서 \\(E(X) = \\lambda\\) 이므로 \\(\\lambda\\) = 3으로 지정\n\n\npoisson_random &lt;- rpois(n = 500, lambda = 3)\nhist(poisson_random)\n\n\n\n\n\n\n\n\n- 표본평균\n\nmean(poisson_random)\n\n2.874\n\n\n\n\n\n- 표본추출, 히스토그램\n\n이항분포에서 \\(E(X) = np =\\) 3이 되어야하고, size : n, prob = p 에 대응되므로 평균을 10 X 0.3 = 3으로 설정\n\n\nbinomial_random &lt;- rbinom(n = 500, size = 10, prob = 0.3)\nhist(binomial_random, breaks = seq(-0.5, 10.5, by = 1))\n\n\n\n\n\n\n\n\n- 표본평균\n\nmean(binomial_random)\n\n3.106\n\n\n\n\n\n- 표본추출, 히스토그램\n\n\\(GAM(\\alpha,\\beta)\\) 에서 shape : \\(\\alpha\\), rate : \\(\\frac{1}{\\beta}\\) 에 대응\n감마분포에서 \\(E(X) =\\) \\(\\alpha\\) X \\(\\beta =\\) 3이 되어야함\n1(shape) X 3(=1/rate) = 3\n\n\ngamma_random = rgamma(n=500,shape=1,rate=1/3)\nhist(gamma_random)\n\n\n\n\n\n\n\n\n- 표본평균\n\nmean(gamma_random)\n\n2.86597826745274\n\n\n\n\n\n- 표본추출, 히스토그램\n\n지수분포에서 \\(E(X)= \\frac{1}{\\lambda}=\\) 3이 되어야함\nrate= \\(\\lambda\\) 이므로 3(=1/rate)=3\n\n\nexponential_random &lt;- rexp(n = 500, rate = 1/3)\nhist(exponential_random)\n\n\n\n\n\n\n\n\n- 표본평균\n\nmean(exponential_random)\n\n3.00293798354794\n\n\n\n\n\n\n\n\n- 표본추출, 히스토그램\n\n이항분포에서 \\(E(X) = np\\) 이고\n이항분포에서 \\(Var(X) = np(1-p)\\) 임\nnp=3이어야하고 np(1-p)=5여야하므로 (1-p)=5/3 \\(\\to\\) 불가능한데? 잠시 pass\nsize : n, prob = p 에 대응되므로 …\n\n\nbinomial_random &lt;- rbinom(n = 500, size = 10, prob = 0.3)\nhist(binomial_random, breaks = seq(-0.5, 10.5, by = 1))\n\n- 표본평균, 표본분산\n\nmean(binomial_random)\n\n\n\n\n- 표본추출, 히스토그램\n\nmean = 3 으로 지정\n\\(Var(X)=5\\) 이여야 하므로 sd=\\(\\sqrt{Var}\\)=\\(\\sqrt5\\) 로 지정\n\n\nnormal_random &lt;- rnorm(n = 500, mean = 3, sd=sqrt(5))\nhist(normal_random)\n\n\n\n\n\n\n\n\n- 표본평균, 표본분산\n\nmean(normal_random)\nvar(normal_random)\n\n2.92370604471217\n\n\n5.19843216215837\n\n\n\n\n\n- 표본추출, 히스토그램\n\n\\(GAM(\\alpha,\\beta)\\) 에서 shape : \\(\\alpha\\), rate : \\(\\frac{1}{\\beta}\\) 에 대응\n감마분포에서 \\(E(X) =\\) \\(\\alpha\\) X \\(\\beta\\) = 3이 되어야함\n\\(Var(X) =\\) \\(\\alpha\\) X \\(\\beta^2\\) = 5가 되어야함\n\\(\\to\\) \\(\\beta\\) = 5/3, \\(\\alpha\\) = 9/5 \\(\\to\\) rate = 3/5\n\n\ngamma_random = rgamma(n=500,shape=9/5,rate=3/5)\nhist(gamma_random)\n\n\n\n\n\n\n\n\n- 표본평균, 표본 분산\n\nmean(gamma_random)\nvar(gamma_random)\n\n3.15297204789198\n\n\n4.84604724922782"
  },
  {
    "objectID": "posts/3.DC_HW1.html#아래와-같이-표본이-주어져-있다고-한다.",
    "href": "posts/3.DC_HW1.html#아래와-같이-표본이-주어져-있다고-한다.",
    "title": "3. DC HW1",
    "section": "3. 아래와 같이 표본이 주어져 있다고 한다.",
    "text": "3. 아래와 같이 표본이 주어져 있다고 한다.\n\n1) 두 변수 간의 표본과 공분산 그리고 표본 상관계수를 계산하고 해석하시오"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DC2025",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nApr 7, 2025\n\n\n4. 대수의 법칙ex\n\n\n이상민 \n\n\n\n\nApr 5, 2025\n\n\n3. DC HW1\n\n\n이상민 \n\n\n\n\nApr 4, 2025\n\n\n2. 상관계수 ex\n\n\n이상민 \n\n\n\n\nMar 25, 2025\n\n\n1. R distributions\n\n\n이상민 \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/4.대수의법칙ex.html",
    "href": "posts/4.대수의법칙ex.html",
    "title": "4. 대수의 법칙ex",
    "section": "",
    "text": "cumsum(rpois(5000,3))\n\n\n⋯1463814638146411464214648146511465314655146561465614658146591466314665146651466914672146761468014681146831468414685146901469414699147021470314707147101471114714147151471514722147251473114735147411474214742147441474714751147541475514759147621476314765147681476814771147731477414783147861478614791147931480014800148041480514808148131481514821148251482714831148341483514836148401484514847148501485414856148591486314864148671486914871148761488014882148861489114894148961490114902149071490814911149141491514919149231492814931149361493914943149451494714954149561495814961149651496814968149751497814980149811498414986149881499014993149961499815002150051501015013150151501815021150301503415037150381504115044150481505115052150571506115064150681506915071150771508115085150871508815093150941510015103151081510915112151181511915120151211512615128151301513215137151381514515147151491515415157151621516615170151761517715181151831518715190151941519615199152101521015211152161522215228152291523115237152401524315244\n\n\n\ncumsum(rpois(5000,3))/1:5000\n\n\n⋯2.988752343261822.988546438983762.988340620445552.988967527060782.988969823100942.98897211818562.988974412315372.988560732113142.989394884591392.989604989604992.990230721263772.990440565253532.99085809266572.990444536767762.990654205607482.990033222591362.990450487855512.990452469904522.990454451130942.990456431535272.990873262808552.991289921194532.990669707650842.991293532338312.991295336787562.991089929548282.991298943443132.990886495443252.990474218264652.990683229813662.990892154833372.99089403973512.990689013035382.990070335126192.990279214064122.990281224152192.990283233409142.990285241835472.990700557966522.990702479338842.990704399917372.99070631970262.990088787941362.989884393063582.989886480908152.989888567891042.989890654012792.990099009900992.989482367498452.990103092783512.990105132962282.990107172300082.989903152689062.989905232797692.990731204943362.990321252059312.990735021618282.990119390695762.989915620498042.989711934156382.989714050606872.989716166186752.989307012132432.988898026315792.989105858170612.988697081792032.988083008013152.988290879211182.98829328404192.988090349075982.987887497433792.987684729064042.987276831520622.987279441936812.987282051282052.986669401148482.986057002255482.985444854448542.985037917606072.985450819672132.985453800450732.98525194592382.985459758345282.985872235872242.985465711361312.985468686041752.986085533046862.98608837970542.986295766005322.986094069529652.986096912696792.986304170073592.985693848354792.985696771557012.9852911133812.985294117647062.9850929140292.985708452429562.985711369667282.985306122448982.984901040603962.984904120767032.98470324291252.984298531810772.984097859327222.984101100693032.984308131241082.984311328443362.983703401914852.984114052953162.984320912237832.985138436482082.984734378180342.984533984533982.98514750762972.984947111472742.984746796827332.984546563643762.985159585281562.984756097560982.984149563096932.984559122308012.984765386959172.984768480909832.985177664974622.984977669508732.98518368175362.985389610389612.984986812740922.984584178498992.984384506185362.984387672343882.984593553618492.984596676124852.984802431610942.984197730956242.984606036054282.984811664641562.984409799554572.984615384615382.984011333738112.98401456900042.98422010924542.984830097087382.984428715874622.984229680549942.984435011117852.985246564268392.98524954536272.985656565656572.986265400929112.986672051696282.987078538259642.987283003633432.987285570131182.987086359967722.987290700020172.987696651875762.987497479330512.986895161290322.986494658335012.986497380088672.986298609711872.986301369863012.986304128902322.986709625453082.986913629957722.987117552334942.987321392634332.987122736418512.987326493663252.987329042638782.987331590589182.987133092078812.987537688442212.987339228295822.987542696403462.987344314985942.987146013255672.986947791164662.986548885765912.986551585708552.986754966887422.986757624398072.986760280842532.986562374649022.986966111890922.98736968724942.987372218881542.98777555110222.987577639751552.987980769230772.987983176447032.988386063275932.987787787787792.987990392313852.987792675605362.987795118047222.98739747949592.9876\n\n\n\nts.plot(cumsum(rpois(5000,3))/1:5000)\n\n\n\n\n\n\n\n\n- 모평균이 3이므로 3으로 가까이 수렴하는 형태\n\n분포 종류 상관 x\n대수의 법칙\n\n\nrs=rep(0,1000)\nfor(k in 1:1000)\n    {\n    rs[k]=mean(rpois(1000*k,3))\n\n    if(k%%100 == 0) print(k)\n    }\n\n[1] 100\n[1] 200\n[1] 300\n[1] 400\n[1] 500\n[1] 600\n[1] 700\n[1] 800\n[1] 900\n[1] 1000\n\n\n\nplot(rs)\n\n\n\n\n\n\n\n\n- 표본의 크기가 커지면 더 가늘어짐\n\nrs=rep(0,1000)\nfor(k in 1:1000)\n    {\n    rs[k]=mean(rpois(2000*k,3))\n\n    if(k%%100 == 0) print(k)\n    }\n\n[1] 100\n[1] 200\n[1] 300\n[1] 400\n[1] 500\n[1] 600\n[1] 700\n[1] 800\n[1] 900\n[1] 1000\n\n\n\nplot(rs)"
  },
  {
    "objectID": "posts/1.R_distributions.html",
    "href": "posts/1.R_distributions.html",
    "title": "1. R distributions",
    "section": "",
    "text": "1. Normal Distribution(정규분포)\n- (Random Number Generation)\n- rnorm(n, mean, sd) -&gt; 평균 mean, 표준편차 sd 에서 n개 랜덤 추출\n\nnormal_random &lt;- rnorm(n = 10, mean = 0, sd = 1)\nprint(\"Normal Random Numbers:\")\nprint(normal_random)\n\n[1] \"Normal Random Numbers:\"\n [1] -0.72730915 -0.09955575 -2.01791946 -1.17899047  0.08952181  0.84630774\n [7]  0.34269490  0.17711561  1.02601457  0.60893424\n\n\n- (Probability Density Function - PDF)\n\n확률밀도함수\n\n\nnormal_pdf &lt;- dnorm(x = seq(-10,10,by=0.05), mean = 0, sd = 1)\nplot(seq(-10,10,by=0.05),normal_pdf, type='l', main ='Normal PDF')\n\n\n\n\n\n\n\n\n- (Cumulative Distribution Function - CDF)\n\n누적분포함수\n\n\nnormal_cdf &lt;- pnorm(q = seq(-10,10,by=0.05), mean = 0, sd = 1)\nplot(seq(-10,10,by=0.05),normal_cdf, main='Norma CDF', type='l' )\n\n\n\n\n\n\n\n\n- (Quantile Function)\n\n분위함수\n\n\nnormal_quantile &lt;- qnorm(p = 0.95, mean = 0, sd = 1)  # 95% 분위수\nprint(\"Normal Quantile at p=0.95:\")\nprint(normal_quantile)\n\n[1] \"Normal Quantile at p=0.95:\"\n[1] 1.644854\n\n\n\n\n2. Bernoulli Distribution(베르누이 분포)\n- rbinom\n\np=prob 에서\nsize번 베르누이 시행해서 성공한 횟수\nn번 반복해서 return\n\n\nbernoulli_random &lt;- rbinom(n = 10, size = 1, prob = 0.6)\nprint(\"Bernoulli Random Numbers:\")\nprint(bernoulli_random)\n\n[1] \"Bernoulli Random Numbers:\"\n [1] 1 1 1 0 0 1 1 0 1 1\n\n\n- (Probability Mass Function - PMF)\n\n확률 질량 함수\n\n\nbernoulli_pmf &lt;- dbinom(x = c(0,1), size = 1, prob = 0.6)\nbarplot(bernoulli_pmf, main ='Bernoulli pmf')\n\n\n\n\n\n\n\n\n- pbinom(q, size, prob)\n\n누적 분포 함수\n\n\nbernoulli_cdf &lt;- pbinom(q = c(0,1), size = 1, prob = 0.6)\nplot(bernoulli_cdf~c(0,1), xlim = c(-0.2, 1.2),main ='Bernoulli cdf', type='s')\n\n\n\n\n\n\n\n\n\nbernoulli_cdf &lt;- pbinom(q = c(0,1,2,3), size = 3, prob = 0.6)\nplot(bernoulli_cdf~c(0,1,2,3), xlim = c(-0.2, 3.2),main ='Bernoulli cdf', type='s')\n\n\n\n\n\n\n\n\n- (Quantile Function)\n\n분위함수\n\n\nbernoulli_quantile &lt;- qbinom(p = 0.8, size = 1, prob = 0.6)\nprint(\"Bernoulli Quantile at p=0.8:\")\nprint(bernoulli_quantile)\n\n[1] \"Bernoulli Quantile at p=0.8:\"\n[1] 1\n\n\n\n\n3. Binomial Distribution(이항분포)\n- 베르누이분포와 같은 함수지만 size를 1이 아니라 B(n,p)에서의 n으로 바꿈\n\nbinomial_random &lt;- rbinom(n = 10, size = 5, prob = 0.4)\nprint(\"Binomial Random Numbers:\")\nprint(binomial_random)\n\n[1] \"Binomial Random Numbers:\"\n [1] 2 3 3 2 3 1 1 3 3 1\n\n\n- 확률 질량 함수\n\ndbinom(x, size, prob)\n\n\nbernoulli_pmf &lt;- dbinom(x = c(0:5), size = 5, prob = 0.4)\nbarplot(bernoulli_pmf, main ='Binomial pmf')\n# 0,1,2,3,4,5 가 나올 확률\n\n\n\n\n\n\n\n\n- 이항분포의 특성상 분산이 더 작음\n\nE(X) = np\nVar(X) = npq\nq=1-p 이므로 &lt;=1\n\n\nbinomial_random &lt;- rbinom(n = 100, size = 5, prob = 0.4)\nmean(binomial_random)\nvar(binomial_random)\n\n2.21\n\n\n1.42010101010101\n\n\n- 누적 분포 함수\n\npbinom(q, size, prob)\n\n\nbinomial_cdf &lt;- pbinom(q = c(0:5), size = 5, prob = 0.4)\nplot(binomial_cdf~c(0:5), main ='Binomial cdf', xlim=c(0,5), type='s')\n\n\n\n\n\n\n\n\n- (Quantile Function)\n\n분위함수\nqbinom(p, size, prob)\n\n\nbinomial_quantile &lt;- qbinom(p = 0.7, size = 5, prob = 0.4)\nprint(\"Binomial Quantile at p=0.7:\")\nprint(binomial_quantile)\n\n[1] \"Binomial Quantile at p=0.7:\"\n[1] 3\n\n\n\n\n4. Exponential Distribution(지수분포)\n- rexp(n, rate)\n\nexponential_random &lt;- rexp(n = 10, rate = 2)\nprint(\"Exponential Random Numbers:\")\nprint(exponential_random)\n\n[1] \"Exponential Random Numbers:\"\n [1] 0.1571845 0.1074697 0.5828041 0.3155801 1.0756425 0.2600387 0.1384434\n [8] 1.6451927 0.1802277 0.3058570\n\n\n\nmean(rexp(n = 10, rate = 2))\nmean(rexp(n = 100000, rate = 10))\nmean(rexp(n = 100000, rate = 10))\n#거의 1에 근사하게 나옴\n\n0.82651321556108\n\n\n0.0997617675944707\n\n\n0.100401256810418\n\n\n- 확률 밀도 함수\n\ndexp(x, rate)\n\n\nexponential_pdf &lt;- dexp(x = seq(0, 10, length=1000), \n                        rate = 2)\nplot(exponential_pdf~c(seq(0, 10, length=1000)), \n      main=\"Exponential PDF\", type='l', xlab='x', ylab='value')\n\n\n\n\n\n\n\n\n- 누적 분포 함수\n\npexp(q, rate)\n\n\nexponential_cdf &lt;- pexp(q = seq(0, 10, length=1000), rate = 2)\nplot(exponential_cdf~c(seq(0, 10, length=1000)), \n     main=\"Exponential CDF\", type='s', xlab='x', ylab='value')\n###print(exponential_cdf)\n\n\n\n\n\n\n\n\n- (Quantile Function)\n\n분위함수\nqexp(p, rate)\n\n\nexponential_quantile &lt;- qexp(p = 0.6, rate = 2)\nprint(\"Exponential Quantile at p=0.6:\")\nprint(exponential_quantile)\n\n[1] \"Exponential Quantile at p=0.6:\"\n[1] 0.4581454\n\n\n\n\n5. Poisson Distribution(포아송 분포)\n- rpois\n\nlambda=3의 포아송 \\(\\to\\) 결과\nn=10번 반복\n\n\npoisson_random &lt;- rpois(n = 10, lambda = 3)\nprint(\"Poisson Random Numbers:\")\nprint(poisson_random)\n\n[1] \"Poisson Random Numbers:\"\n [1] 1 4 2 5 4 3 1 4 2 5\n\n\n포아송 분포를 따르는 변수의 평균과 분산이 같음\n\nmean(rpois(n=100000,lambda=3))\nvar(rpois(n=100000,lambda=3))\n\n2.99803\n\n\n2.97500698366984\n\n\n- 확률 질량 함수\n\ndpois(x,lambda)\n\n\npoisson_pmf &lt;- dpois(x = seq(0,12,1), lambda = 3)\nnames(poisson_pmf) = seq(0,12,1)\nbarplot(poisson_pmf, main=\"Poisson PMF\")\n\n\n\n\n\n\n\n\n- 누적 분포 함수\n\nppois(q, lambda)\n\n\npoisson_cdf &lt;- ppois(q = seq(0,12,1), lambda = 3)\nnames(poisson_pmf) = seq(0,12,1)\nplot(poisson_cdf~c(0:12), main=\"Poisson CDF\", xlab='x', \n    ylab='value', type='s')\n\n\n\n\n\n\n\n\n- (Quantile Function)\n\n분위함수\nqpois(p, lambda)\n\n\npoisson_quantile &lt;- qpois(p = 0.9, lambda = 3)\nprint(\"Poisson Quantile at p=0.9:\")\nprint(poisson_quantile)\n\n[1] \"Poisson Quantile at p=0.9:\"\n[1] 5\n\n\n\n- 추가\n- 감마 분포\n\n평균 : \\(\\alpha\\) x \\(\\beta\\)\n분산 : \\(\\alpha\\) x \\(\\beta^2\\)\n\n\nmean(rgamma(100000,1,3))\nvar(rgamma(100000,1,3))\n\n0.333018431858545\n\n\n0.111819570741366\n\n\n\n- ggplot\n\nlibrary(ggplot2)\nlibrary(tidyr) \n\n\nresults &lt;- data.frame(\n  Distribution = character(),\n  Value = numeric(),\n  Type = character(),  # Mean, Median, Variance를 구분하는 열 추가\n  stringsAsFactors = FALSE\n)\n\n\n# 1. Normal Distribution\nnormal_data &lt;- rnorm(n = 1000, mean = 0, sd = 1)\n\n\n# ggplot histogram \nggplot(data.frame(Value = normal_data), aes(x = Value)) +\n  geom_histogram(bins = 30, fill = \"skyblue\", color = \"black\") +  # bins: 막대 개수\n  labs(title = \"Normal Distribution Histogram\", x = \"Value\", y = \"Frequency\") +\n  theme_bw() \n\n\n\n\n\n\n\n\n\n# results \nresults &lt;- rbind(results,\n                 data.frame(Distribution = \"Normal\", Value = mean(normal_data), Type = \"Mean\"),\n                 data.frame(Distribution = \"Normal\", Value = median(normal_data), Type = \"Median\"),\n                 data.frame(Distribution = \"Normal\", Value = var(normal_data), Type = \"Variance\"))\n\n\n# 2. Bernoulli Distribution\nbernoulli_data &lt;- rbinom(n = 1000, size = 1, prob = 0.7)\n\n\n# ggplot bar plot \nggplot(data.frame(Outcome = factor(bernoulli_data)), aes(x = Outcome)) +\n  geom_bar(fill = \"coral\", color = \"black\") +\n  labs(title = \"Bernoulli Distribution Bar Plot\", x = \"Outcome (0: Failure, 1: Success)\", y = \"Frequency\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nresults &lt;- rbind(results,\n                 data.frame(Distribution = \"Bernoulli\", Value = mean(bernoulli_data), Type = \"Mean\"),\n                 data.frame(Distribution = \"Bernoulli\", Value = median(bernoulli_data), Type = \"Median\"),\n                 data.frame(Distribution = \"Bernoulli\", Value = var(bernoulli_data), Type = \"Variance\"))\n\n\n# 3. Binomial Distribution\nbinomial_data &lt;- rbinom(n = 1000, size = 10, prob = 0.3)\n\n\n# ggplot histogram \nggplot(data.frame(Successes = binomial_data), aes(x = Successes)) +\n  geom_histogram(binwidth = 1, fill = \"lightgreen\", color = \"black\") +  # binwidth: 막대 너비\n  labs(title = \"Binomial Distribution Histogram\", x = \"Number of Successes\", y = \"Frequency\") +\n  scale_x_continuous(breaks = seq(0, 10, by = 1)) +  # x축 눈금 설정\n  theme_bw()\n\n\n\n\n\n\n\n\n\nresults &lt;- rbind(results,\n                 data.frame(Distribution = \"Binomial\", Value = mean(binomial_data), Type = \"Mean\"),\n                 data.frame(Distribution = \"Binomial\", Value = median(binomial_data), Type = \"Median\"),\n                 data.frame(Distribution = \"Binomial\", Value = var(binomial_data), Type = \"Variance\"))\n\n\n# 4. Exponential Distribution\nexponential_data &lt;- rexp(n = 1000, rate = 2)\n\n\n# ggplot histogram \nggplot(data.frame(Time = exponential_data), aes(x = Time)) +\n  geom_histogram(bins = 30, fill = \"gold\", color = \"black\") +\n  labs(title = \"Exponential Distribution Histogram\", x = \"Time\", y = \"Frequency\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nresults &lt;- rbind(results,\n                 data.frame(Distribution = \"Exponential\", Value = mean(exponential_data), Type = \"Mean\"),\n                 data.frame(Distribution = \"Exponential\", Value = median(exponential_data), Type = \"Median\"),\n                 data.frame(Distribution = \"Exponential\", Value = var(exponential_data), Type = \"Variance\"))\n\n\n# 5. Poisson Distribution\npoisson_data &lt;- rpois(n = 1000, lambda = 5)\n\n\n# ggplot histogram \nggplot(data.frame(Events = poisson_data), aes(x = Events)) +\n  geom_histogram(binwidth = 1, fill = \"violet\", color = \"black\") +\n  labs(title = \"Poisson Distribution Histogram\", x = \"Number of Events\", y = \"Frequency\") +\n  scale_x_continuous(breaks = seq(0, max(poisson_data), by = 1)) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nresults &lt;- rbind(results,\n                 data.frame(Distribution = \"Poisson\", Value = mean(poisson_data), Type = \"Mean\"),\n                 data.frame(Distribution = \"Poisson\", Value = median(poisson_data), Type = \"Median\"),\n                 data.frame(Distribution = \"Poisson\", Value = var(poisson_data), Type = \"Variance\"))\n\n\nresults\n\n\nA data.frame: 15 × 3\n\n\nDistribution\nValue\nType\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n\n\n\n\nNormal\n0.01671411\nMean\n\n\nNormal\n0.01257944\nMedian\n\n\nNormal\n0.92430136\nVariance\n\n\nBernoulli\n0.70800000\nMean\n\n\nBernoulli\n1.00000000\nMedian\n\n\nBernoulli\n0.20694294\nVariance\n\n\nBinomial\n2.94600000\nMean\n\n\nBinomial\n3.00000000\nMedian\n\n\nBinomial\n2.10919319\nVariance\n\n\nExponential\n0.51712705\nMean\n\n\nExponential\n0.34010939\nMedian\n\n\nExponential\n0.28038007\nVariance\n\n\nPoisson\n4.93600000\nMean\n\n\nPoisson\n5.00000000\nMedian\n\n\nPoisson\n4.74464865\nVariance"
  }
]